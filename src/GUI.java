
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.Timer;
import java.util.logging.Level;
import java.util.logging.Logger;
import main.DataInput;
import main.Tester;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author caca
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    int isOpened;
    public GUI() {
        initComponents();
        isOpened = 0;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        selectFolder = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        text_particle = new javax.swing.JTextField();
        text_velocity = new javax.swing.JTextField();
        text_fitness = new javax.swing.JTextField();
        text_iterasi = new javax.swing.JTextField();
        text_r1 = new javax.swing.JTextField();
        text_r2 = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        result = new javax.swing.JTextArea();
        start_PSO = new javax.swing.JButton();
        label_notification = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        start_PSO_Kmeans = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        text_centroid = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        selectFolder.setText("Select Folder");
        selectFolder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectFolderActionPerformed(evt);
            }
        });

        jLabel1.setText("Jumlah centroid:");

        jLabel2.setText("Jumlah partikel: ");

        jLabel3.setText("Nilai velocity maksimal:");

        jLabel4.setText("Target nilai fitness:");

        jLabel5.setText("Jumlah maksimal iterasi:");

        jLabel6.setText("R1:");

        jLabel7.setText("R2:");

        text_particle.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        text_velocity.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        text_fitness.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        text_iterasi.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        text_r2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_r2ActionPerformed(evt);
            }
        });

        result.setColumns(20);
        result.setRows(5);
        jScrollPane1.setViewportView(result);

        start_PSO.setText("Clustering with PSO");
        start_PSO.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                start_PSOActionPerformed(evt);
            }
        });

        label_notification.setForeground(java.awt.Color.red);
        label_notification.setText(".");

        jLabel8.setText("(int)");

        jLabel9.setText("(int)");

        jLabel10.setText("(double)");

        start_PSO_Kmeans.setText("Clustering with K-means");
        start_PSO_Kmeans.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                start_PSO_KmeansActionPerformed(evt);
            }
        });

        jLabel11.setText("(double)");

        jLabel12.setText("(int)");

        jLabel13.setText("(double)");

        jLabel14.setText("(double)");

        text_centroid.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        text_centroid.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_centroidActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(label_notification, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(selectFolder, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(start_PSO, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel1)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4)
                                            .addComponent(jLabel5)
                                            .addComponent(jLabel6))
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addGroup(layout.createSequentialGroup()
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(text_fitness, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(text_velocity, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(text_particle, javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(layout.createSequentialGroup()
                                                        .addComponent(text_iterasi, javax.swing.GroupLayout.DEFAULT_SIZE, 206, Short.MAX_VALUE)
                                                        .addGap(1, 1, 1))
                                                    .addComponent(text_centroid))
                                                .addGap(2, 2, 2)
                                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel10, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel11, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(jLabel12)
                                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                                        .addComponent(jLabel9)
                                                        .addComponent(jLabel8))))
                                            .addGroup(layout.createSequentialGroup()
                                                .addComponent(text_r1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(3, 3, 3)
                                                .addComponent(jLabel13)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel7)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(text_r2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(3, 3, 3)
                                                .addComponent(jLabel14))))))
                            .addComponent(start_PSO_Kmeans, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 657, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(selectFolder)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel8)
                            .addComponent(text_centroid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(14, 14, 14)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(text_particle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel9))
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(text_velocity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addGap(24, 24, 24)
                        .addComponent(jLabel4))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(text_fitness, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel11)))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(text_iterasi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(text_r1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(text_r2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14)
                    .addComponent(jLabel13))
                .addGap(18, 18, 18)
                .addComponent(start_PSO)
                .addGap(18, 18, 18)
                .addComponent(start_PSO_Kmeans)
                .addGap(33, 33, 33)
                .addComponent(label_notification)
                .addContainerGap(517, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void selectFolderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectFolderActionPerformed
        int returnVal = fileChooser.showOpenDialog(this);
        if (returnVal == fileChooser.APPROVE_OPTION) {
            System.out.println("getCurrentDirectory(): " +  fileChooser.getCurrentDirectory());
            File[] file = fileChooser.getSelectedFiles();
            isOpened = 1;
            // What to do with the file, e.g. display it in a TextArea
//              textarea.read( new FileReader( file.getAbsolutePath() ), null );
        } else {
            System.out.println("File access cancelled by user.");
        }
    }//GEN-LAST:event_selectFolderActionPerformed

    private void start_PSOActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_start_PSOActionPerformed
        if(text_centroid.getText().isEmpty()||text_particle.getText().isEmpty()||text_velocity.getText().isEmpty()||text_fitness.getText().isEmpty()||text_iterasi.getText().isEmpty()||text_r1.getText().isEmpty()||text_r2.getText().isEmpty()||this.isOpened == 0){
            label_notification.setText("Please complete the data first");
        }
        else{
            label_notification.setText("Please Wait");
            DataInput input = new DataInput();
            input.setPath(fileChooser.getCurrentDirectory().toString());
            input.setJumlahParticle(Integer.parseInt(text_particle.getText()));
            input.setJumlahCentroid(Integer.parseInt(text_centroid.getText()));
            input.setVelocity(Double.parseDouble(text_velocity.getText()));
            input.setFitness(Double.parseDouble(text_fitness.getText()));
            input.setIterasi(Integer.parseInt(text_iterasi.getText()));
            input.setR1(Double.parseDouble(text_r1.getText()));
            input.setR2(Double.parseDouble(text_r2.getText()));
            input.setAlgorithm("PSO");

            Tester tester = new Tester();
            String solutions="";
            try {
                solutions = tester.main(input);
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            ActionListener listener;
            listener = new ActionListener(){
                public void actionPerformed(ActionEvent event){
                    label_notification.setText("Please Wait");
                    result.setText("");
                }
            };
            result.setText(solutions);
            label_notification.setText("done");

            
            
//            result.setText(solutions);
        }
    }//GEN-LAST:event_start_PSOActionPerformed

    private void text_r2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_r2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_r2ActionPerformed

    private void text_centroidActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_centroidActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_centroidActionPerformed

    private void start_PSO_KmeansActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_start_PSO_KmeansActionPerformed
        if(text_centroid.getText().isEmpty()||text_particle.getText().isEmpty()||text_velocity.getText().isEmpty()||text_fitness.getText().isEmpty()||text_iterasi.getText().isEmpty()||text_r1.getText().isEmpty()||text_r2.getText().isEmpty()||this.isOpened == 0){
            label_notification.setText("Please complete the data first");
        }
        else{
            DataInput input = new DataInput();
            input.setPath(fileChooser.getCurrentDirectory().toString());
            input.setJumlahParticle(Integer.parseInt(text_particle.getText()));
            input.setJumlahCentroid(Integer.parseInt(text_centroid.getText()));
            input.setVelocity(Double.parseDouble(text_velocity.getText()));
            input.setFitness(Double.parseDouble(text_fitness.getText()));
            input.setIterasi(Integer.parseInt(text_iterasi.getText()));
            input.setR1(Double.parseDouble(text_r1.getText()));
            input.setR2(Double.parseDouble(text_r2.getText()));
            input.setAlgorithm("KMEANS");

            label_notification.setText("Please Wait");

            Tester tester = new Tester();
            String solutions="";
            try {
                solutions = tester.main(input);
            } catch (IOException ex) {
                Logger.getLogger(GUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            ActionListener listener;
            listener = new ActionListener(){
                public void actionPerformed(ActionEvent event){
                    result.setText("");
                }
            };
            result.setText(solutions);
            label_notification.setText("done");
        }
    }//GEN-LAST:event_start_PSO_KmeansActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel label_notification;
    private javax.swing.JTextArea result;
    private javax.swing.JButton selectFolder;
    private javax.swing.JButton start_PSO;
    private javax.swing.JButton start_PSO_Kmeans;
    private javax.swing.JTextField text_centroid;
    private javax.swing.JTextField text_fitness;
    private javax.swing.JTextField text_iterasi;
    private javax.swing.JTextField text_particle;
    private javax.swing.JTextField text_r1;
    private javax.swing.JTextField text_r2;
    private javax.swing.JTextField text_velocity;
    // End of variables declaration//GEN-END:variables
}
